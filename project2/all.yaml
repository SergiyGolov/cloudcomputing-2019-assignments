apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: info-service-v1
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: info-service-v1
    spec:
      containers:
        - name: info-service-v1
          image: ludovicherbelin/info-service-v1:latest
          env:
            - name: FLASK_APP
              value: 'server.py'
            - name: DB_HOST
              value: '127.0.0.1'
            - name: DB_PORT
              value: '3306'
            - name: DB_DBNAME
              value: 'watches'
            - name: DB_USER
              value: 'watches'
            - name: DB_PASS
              value: 'watches'
            - name: HTTP_USER
              value: 'cloud'
            - name: HTTP_PASS
              value: 'computing'
          ports:
            - containerPort: 1080
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=cloud-computing-project2:europe-west1:cloud-computing-2019-db=tcp:3306",
                    "-credential_file=/secrets/cc-sql-acc.json"]
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/
              readOnly: true
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          defaultMode: 420
          secretName: cloudsql-instance-credentials
--- 
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: image-service-v1
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: image-service-v1
    spec:
      containers:
        - name: image-service-v1
          image: ludovicherbelin/image-service-v1:latest
          env:
            - name: FLASK_APP
              value: 'server.py'
          ports:
            - containerPort: 1080
   
---
apiVersion: v1
kind: Service
metadata:
  name: info-service-v1
spec:
  ports:
  - port: 80
    targetPort: 1080
    protocol: TCP
  selector:
    app: info-service-v1
  type: NodePort

---

apiVersion: v1
kind: Service
metadata:
  name: image-service-v1
spec:
  ports:
  - port: 80
    targetPort: 1080
    protocol: TCP
  selector:
    app: image-service-v1
  type: NodePort

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: cc-2019-project2
spec:
  rules:
  - http:
      paths:
      - path: /info/v1/*
        backend:
          serviceName: info-service-v1
          servicePort: 80
      - path: /image/v1/*
        backend:
          serviceName: image-service-v1
          servicePort: 80